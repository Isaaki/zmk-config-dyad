#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/* layers */

#define DEFAULT 0
#define LOW     1
#define RAIS    2
#define NUM     3
#define FUN     4

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC     &kp N1    &kp N2    &kp N3  &kp N4     &kp N5     &none                          &none     &kp N6     &kp N7     &kp N8     &kp N9    &kp N0     &kp DEL
&kp TAB     &kp Q     &kp W     &kp E   &kp R      &kp T      &none                          &none     &kp Y      &kp U      &kp I      &kp O     &kp P      &kp BSPC
&caps_word  &kp A     &kp S     &kp D   &kp F      &kp G      &none                          &none     &kp H      &kp J      &kp K      &kp L     &kp SEMI   &kp SQT
&kp LSHFT   &kp Z     &kp X     &kp C   &kp V      &kp B      &kp N6                         &kp N9    &kp N      &kp M      &kp COMMA  &kp DOT   &kp SLASH  &kp LSHFT
&kp LCTRL   &kp LALT  &kp LGUI  &none   &kp LCTRL  &kp SPACE  &mo LOW  &mo FUN      &mo NUM  &mo RAIS  &kp ENTER  &kp LCTRL  &none      &kp LGUI  &kp LALT   &kp LCTRL
            >;
        };

        lower_layer {
            bindings = <
&kp GRAVE  &kp F1  &kp F2  &kp F3  &kp F4    &kp F5    &none                       &none   &kp F6  &kp F7  &kp F8  &kp F9  &kp F10       &kp F11
&trans     &none   &none   &none   &kp LBRC  &kp RBRC  &none                       &none   &none   &none   &none   &none   &kp PSCRN     &kp RA(LBKT)
&trans     &none   &none   &none   &kp LPAR  &kp RPAR  &none                       &none   &none   &none   &none   &none   &kp RA(SEMI)  &kp RA(SQT)
&trans     &none   &none   &none   &kp LBKT  &kp RBKT  &none                       &none   &none   &none   &none   &none   &kp BSLH      &trans
&trans     &trans  &trans  &trans  &trans    &trans    &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans        &trans
            >;
        };

        raise_layer {
            bindings = <
&trans  &trans  &trans    &trans    &trans     &trans  &trans                      &trans  &trans    &trans    &trans  &trans     &trans        &kp BSPC
&trans  &none   &none     &kp UP    &none      &none   &none                       &none   &none     &none     &none   &none      &none         &kp RA(LBKT)
&trans  &none   &kp LEFT  &kp DOWN  &kp RIGHT  &none   &none                       &none   &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp RA(SEMI)  &kp RA(SQT)
&trans  &none   &none     &none     &none      &none   &none                       &none   &none     &none     &none   &none      &none         &none
&trans  &trans  &trans    &trans    &trans     &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans  &trans     &trans        &trans
            >;
        };

        adjust_layer {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none   &bt BT_CLR  &bt BT_CLR_ALL                      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none   &none   &bt BT_CLR  &bt BT_CLR_ALL
&trans  &none         &none         &none         &none   &none       &none                               &none         &none         &none         &none   &none   &none       &none
&trans  &none         &none         &none         &none   &none       &none                               &none         &none         &none         &none   &none   &none       &none
&trans  &none         &none         &none         &none   &none       &none                               &none         &none         &none         &none   &none   &none       &none
&trans  &trans        &trans        &trans        &trans  &trans      &trans          &trans      &trans  &trans        &trans        &trans        &trans  &trans  &trans      &trans
            >;
        };

        number_layer {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none  &bt BT_CLR  &bt BT_CLR_ALL                    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none  &none  &bt BT_CLR  &bt BT_CLR_ALL
&trans  &none         &none         &none         &none  &none       &none                             &none         &none         &none         &none  &none  &none       &none
&trans  &none         &none         &none         &none  &none       &none                             &none         &none         &none         &none  &none  &none       &none
&trans  &none         &none         &none         &none  &none       &none                             &none         &none         &none         &none  &none  &none       &none
&trans  &none         &none         &none         &none  &none       &none           &none      &none  &none         &none         &none         &none  &none  &none       &none
            >;
        };

        function_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans  &trans  &kp BSPC
&trans  &none   &none   &none   &none   &none   &none                       &none   &none   &none   &none   &none   &none   &none
&trans  &none   &none   &none   &none   &none   &none                       &none   &none   &none   &none   &none   &none   &none
&trans  &none   &none   &none   &none   &none   &none                       &none   &none   &none   &none   &none   &none   &none
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
